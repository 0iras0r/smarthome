# homeassistant:
#   customize:
#     input_boolean.keep_alive:
#       hidden: true

# input_boolean:
#   keep_alive:
#     name: Dummy Switch
#     initial: on

# input_number:
#   master_bath_timeout:
#     name: Master Bath Time Out
#     initial: 1
#     min: 0
#     max: 60
#     step: 1

# binary_sensor:
#   - platform: mqtt
#     state_topic: "/home/motion"
#     name: "Master Bath Motion"
#     payload_on: "1"
#     payload_off: "0"
#     device_class: motion

# sensor:
#   - platform: template
#     sensors:
#       master_bath_timeout_threshold:
#         entity_id: input_boolean.keep_alive
#         value_template: >-
#           {{ ( (as_timestamp(now()) - as_timestamp(states.binary_sensor.master_bath_motion.last_changed) | int ) /60) | int > (states.input_number.master_bath_timeout.state | int) }}

# automation:
#   - alias: Keep Alive
#     initial_state: true
#     hide_entity: true
#     trigger:
#       - platform: time
#         seconds: '/1'
#     action:
#       - service: input_boolean.toggle
#         entity_id: input_boolean.keep_alive

# homeassistant:
#   customize:

#     input_boolean.dummy:
#       friendly_name: Dummy Input Boolean
#       hidden: true
#       color_set: false
#       rgb_color: [100,100,100]
#       brightness: 255

#     script.set_random_color_2_all_bulbs:
#       hidden: false
#     script.light_set_color:
#       hidden: false

# group:
#   Family Room Hue Bulbs:
#     entities:
#       - light.hue_color_lamp_1
#       - light.hue_color_lamp_2
#       - light.hue_color_lamp_3

# input_boolean:
#   dummy:
#     name: Dummy Input Boolean
#     initial: on
#     icon: mdi:file-chart

# script:
#   set_random_color_2_all_bulbs:
#     sequence:
#       - service: script.light_set_color
#         data_template:
#           entity_id: >
#             {%- macro get_next_entity_id() -%}
#               {%- for item in states.group.family_room_hue_bulbs.attributes.entity_id if is_state_attr(item, 'color_set', False) -%}
#                 {{- "," if not loop.first-}}{{- item -}}{{-endif-}}
#               {%- endfor -%}              
#             {%- endmacro -%}
#             {%- set entity_ids = get_next_entity_id() -%}
#             {% if entity_ids | trim != "" %}
#               {%- if entity_ids.split(',') | length > 0 -%}
#                 {{- entity_ids .split(',')[0] -}}
#               {%- endif -%}
#             {% endif %}
#           r: '{{ "{0:d}".format(range(210, 238)|random) }}'
#           g: '{{ "{0:d}".format(range(100, 132)|random) }}'
#           b: '{{ "{0:d}".format(range(240, 255)|random) }}'
#           brightness: 255

#   light_set_color:
#     sequence:
#       - condition: template
#         value_template: '{{ entity_id | trim != "" }}'
#       - condition: template
#         value_template: '{{ brightness | trim != "" }}'
#       - condition: template
#         value_template: '{{ rgb_color | trim != "" }}'
#       - service: light.turn_on
#         data_template:
#           entity_id: '{{ entity_id }}'
#           brightness: '{{ brightness | int }}'
#           rgb_color:  '[{{r}}, {{g}}, {{b}}]'
#           color_set: true
#       - condition: template
#         value_template: >
#             {%- macro get_next_entity_id() -%}
#               {%- for item in states.group.family_room_hue_bulbs.attributes.entity_id if is_state_attr(item, 'color_set', False) -%}
#                 {{- "," if not loop.first-}}{{- item -}}{{-endif-}}
#               {%- endfor -%}              
#             {%- endmacro -%}
#             {%- set entity_ids = get_next_entity_id() -%}
#             {% if entity_ids | trim != "" and entity_ids.split(',') | length | int == 0 %}
#               false
#             {% else %}
#               true
#             {% endif %}
#       - service_template: script.set_random_color_2_all_bulbs