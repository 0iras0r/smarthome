homeassistant:
  customize:

    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'garegedoors'

      exposed: &exposed
        <<: *customize
        emulated_hue: true
        homebridge_hidden: false
        critical: true

      not_exposed: &not_exposed
        <<: *customize
        emulated_hue: false
        homebridge_hidden: true
        critical: false

      hidden: &hidden
        <<: *customize
        hidden: true
        critical: false
  
    zwave.two_car_garage_door_tilt_sensor:
      friendly_name: 2-Car Garage Door Sensor
      <<: *hidden
    zwave.single_car_garage_door_tilt_sensor:
      friendly_name: 1-Car Garage Door Sensor
      <<: *hidden
    sensor.mqtt_single_car_garage_status:
      friendly_name: 1 Car Garage State in MQTT
      <<: *hidden
    sensor.mqtt_double_car_garage_status:
      friendly_name: 2 Car Garage State in MQTT
      <<: *hidden

    binary_sensor.single_car_garage_door_tilt_sensor_sensor:
      <<: *hidden
      device_class: opening
      friendly_name: Single Car Garage Door
    binary_sensor.two_car_garage_door_tilt_sensor_sensor:
      <<: *hidden
      device_class: opening
      friendly_name: Double Car Garage Door

group:
  Garage Doors:
    entities:
      - binary_sensor.single_car_garage_door_tilt_sensor_sensor
      - binary_sensor.two_car_garage_door_tilt_sensor_sensor
      - sensor.single_car_garage_door_sensor_status
      - sensor.two_car_garage_door_sensor_status
      
sensor:
  - platform: template
    sensors:
      single_car_garage_door_sensor_status:
        friendly_name: Single Car Garage Door Sensor Status
        value_template: >-
          {% if states.binary_sensor.single_car_garage_door_tilt_sensor_sensor.state == 'on' %}
            Open
          {% elif states.binary_sensor.single_car_garage_door_tilt_sensor_sensor.state == 'off' %}
            Closed
          {% else %}
            Unknown
          {% endif %}
        icon_template: >-
          {% set door_status = states.binary_sensor.single_car_garage_door_tilt_sensor_sensor.state |d('unknown') %}
          {% if door_status == 'unknown' %}
            mdi:alert-circle
          {% else %}
            {% if door_status == 'on' %}
              mdi:garage-open
            {% else %}
              mdi:garage
            {% endif %}
          {% endif %}
  
  - platform: template
    sensors:
      two_car_garage_door_sensor_status:
        value_template: >-
          {% if states.binary_sensor.two_car_garage_door_tilt_sensor_sensor.state == 'on' %}
            Open
          {% elif states.binary_sensor.two_car_garage_door_tilt_sensor_sensor.state == 'off' %}
            Closed
          {% else %}
            Unknown
          {% endif %}
        friendly_name: Double Car Garage Door Sensor Status
        icon_template: >-
          {% set door_status = states.binary_sensor.two_car_garage_door_tilt_sensor_sensor.state |d('unknown') %}
          {% if door_status == 'unknown' %}
            mdi:alert-circle
          {% else %}
            {% if door_status == 'on' %}
              mdi:garage-open
            {% else %}
              mdi:garage
            {% endif %}
          {% endif %}

automation:

################################################################################
# Notifies when either of the garage door is opened or closed
# When the garage is opened, it sends an actionable ios notification with an 
# option to close the garage door. This iso actionable notification only occurs 
# when garage door is open and not when it is closed.
###############################################################################
  - alias: Notify Garage Door Status
    initial_state: true
    hide_entity: true
    trigger:
      platform: state
      entity_id: 
      - binary_sensor.two_car_garage_door_tilt_sensor_sensor
      - binary_sensor.single_car_garage_door_tilt_sensor_sensor
    condition:
      - condition: template
        value_template: "{% if trigger.from_state %} True {% else %} False {% endif %}"
    action:
      - service: script.notify_me
        data_template:
          message: >
              {% if trigger.to_state.state | lower == "on" %}
                  {{ trigger.to_state.attributes.friendly_name }} is now OPENED!
              {% elif trigger.to_state.state | lower == "off" %}
                  {{ trigger.to_state.attributes.friendly_name }} is now CLOSED!
              {% endif %}
      - service_template: >
          {% if trigger.to_state.state | lower == "on" %}
            switch.turn_on
          {% else %}
            switch.turn_off
          {% endif%}
        data:
          entity_id: switch.garage_lights
      - service: script.voice_notify
        data_template:
          message: >
            {% if trigger.to_state.state | lower == "on" %}
              Attention! Your {{ trigger.to_state.attributes.friendly_name }} is now OPENED!
            {% elif trigger.to_state.state | lower == "off" %}
              Your {{ trigger.to_state.attributes.friendly_name }} is now CLOSED!
            {% endif %}
      - condition: and
        conditions:
          - condition: template
            value_template: >
              {% if trigger.to_state.state | lower == "on" %}
                true
              {% else %}
                false
              {% endif %}
      - service: notify.ios_suresh
        data_template:
          title: >
            {{ trigger.to_state.attributes.friendly_name }}
          message: >
            Attention: Your {{ trigger.to_state.attributes.friendly_name }} is now OPENED!
          data:
            push:
              badge: 0
              category: >
                {% if trigger.entity_id == "binary_sensor.single_car_garage_door_tilt_sensor_sensor" %}
                  1CAR_GARAGE
                {% else %}
                 2CAR_GARAGE
                {% endif%}

################################################################################
#  iOS Actionable Notification for Single Car Garage Door
################################################################################
  - alias: Close Single Car Garage Door
    initial_state: true
    hide_entity: true
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: 1CAR_GARAGE_CLOSE
    action:
      - service: notify.ios_suresh
        data:
          message: "Closing Single Car Garage Door.."

################################################################################
#  iOS Actionable Notification for Double Car Garage Door
################################################################################
  - alias: Close Double Car Garage Door
    initial_state: true
    hide_entity: true
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: 2CAR_GARAGE_CLOSE
    action:
      - service: notify.ios_suresh
        data:
          message: "Closing Double Car Garage Door.."

################################################################################
#  When I open the garage door
#     if it is dark outside, OR
#     both the garage doors are closed
#       ==> turn the Garage lights ON
################################################################################
  - alias: Garage Lights On When Door is Opened
    initial_state: true
    hide_entity: true
    trigger:
      platform: state
      entity_id: binary_sensor.garage_door_sensor_sensor
      to: 'on'
    condition:
      condition: or
      conditions:
        - condition: template
          value_template: '{{states.sun.sun.state == "below_horizon"}}'
        - condition: and
          conditions:
            - condition: template
              value_template: "{{ states.binary_sensor.single_car_garage_door_tilt_sensor_sensor.state == 'off' }}"
            - condition: template
              value_template: "{{ states.binary_sensor.two_car_garage_door_tilt_sensor_sensor.state == 'off' }}"      
    action:
      - service: switch.turn_on
        entity_id: switch.garage_lights
