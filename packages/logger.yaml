###############################################################################
# @Description    : Logger Package  to set log level on the fly at runtime
###############################################################################

homeassistant:
  customize:
    sensor.current_log_level:
      friendly_name: Current Log Level
      hidden: true

logger:
  default: warning
  logs:
    libopenzwave: error
    openzwave: error
    simplipy.system: critical
    homeassistant.core: error
    homeassistant.setup: error
    homeassistant.loader: error
    homeassistant.components.automation: error
    homeassistant.components.device_tracker: error
    homeassistant.components.discovery: error
    homeassistant.components.http: error 
    homeassistant.components.media_player: error 
    homeassistant.components.recorder: error 
    homeassistant.components.sensor: error 
    homeassistant.components.zwave: error 
    homeassistant.helpers.script: error 
    homeassistant.components.light.lifx: error 
    homeassistant.components.mqtt: error 
    homeassistant.components.api: error 
    custom_components.media_player.sharptv: error 
    custom_components.sensor.command_line: error 
    custom_components.sensor.life360: error 

###############################################################################
# Logger level
input_select:  
  log_level:
    name: Log Level
    options:
     - critical
     - fatal
     - error
     - warning
     - warn
     - info
     - debug
     - notset
    initial: warning

sensor:
  - platform: mqtt
    state_topic: '/homeassistant/log_level'
    name: "Current Log Level"
    value_template: "{{ value }}"

###############################################################################
# Sets Logging Level
automation:  
  - alias: Log Level
    initial_state: true
    hide_entity: true
    trigger:
      - platform: state
        entity_id: input_select.log_level
    action:
      - service: logger.set_level
        data_template:
          homeassistant.components: "{{ trigger.to_state.state }}"
      - service: mqtt.publish
        data_template:
          topic: '/homeassistant/log_level'
          payload: '{{ trigger.to_state.state }}'
          retain: true

  - alias: Restore Log Level on Startup
    initial_state: true
    hide_entity: true
    trigger:
      platform: homeassistant
      event: start
    action:
      - delay:
          minutes: 0
          seconds: 15
      - service: input_select.select_option
        data_template:
          entity_id: input_select.log_level
          option: >
            {% if states.sensor.current_log_level.state == "" %}
              warning
            {% else %}
              {{ states.input_select.current_log_level.state }}
            {% endif %}