###############################################################################
#   @author         :   Mahasri Kalavala
#   @date           :   04/15/2017
#   @package        :   Media Player
#   @description    :   Media Player Sensors, Automations
###############################################################################

homeassistant:
  customize:

    package.node_anchors:
      customize: &customize
        package: 'media_players'

      exposed: &exposed
        <<: *customize
        emulated_hue: true
        homebridge_hidden: false
        critical: true

      not_exposed: &not_exposed
        <<: *customize
        emulated_hue: false
        homebridge_hidden: true
        critical: false

      hidden: &hidden
        <<: *customize
        hidden: true
        critical: false

# Media Players
    media_player.snapcast_client_b827eb8604f5:
      friendly_name: Front Room Music
    media_player.snapcast_client_b827ebaa08f7:
      friendly_name: Kitchen Music
    media_player.snapcast_client_b827eb011e00:
      friendly_name: TV Room Music
    media_player.snapcast_client_b827eb4445b1:
      friendly_name: Master Bedroom Music
    media_player.snapcast_client_b827eba8e7ef:
      friendly_name: Guest Bedroom 1 Music
    media_player.snapcast_client_b827eb505e2d:
      friendly_name: Guest Bedroom 2 Music
    media_player.snapcast_client_001e8c40c713:
      friendly_name: Basement Music
    media_player.snapcast_client_b827ebf10965:
      friendly_name: Office Room Music
    media_player.snapcast_client_0018e7c4488f:
      friendly_name: HA Server (Basement)

    media_player.mpd:
      friendly_name: Mopidy Media Player
    media_player.gstreamer:
      friendly_name: Gstreamer Media Player

    binary_sensor.sharp_tv:
      <<: *not_exposed
      hidden: true
    binary_sensor.sharp_tv_command_state:
      <<: *not_exposed
      hidden: true

group:
  Media Players:
    entities:
      - media_player.gstreamer
      - media_player.mpd
      - media_player.denon_avrx2400h
      - media_player.snapcast_client_0018e7c4488f
      - media_player.snapcast_client_b827eb011e00
      - media_player.snapcast_client_b827eb4445b1
      - media_player.snapcast_client_b827eb505e2d
      - media_player.snapcast_client_b827eb8604f5
      - media_player.snapcast_client_b827eba8e7ef
      - media_player.snapcast_client_b827ebaa08f7
      - media_player.snapcast_client_b827ebf10965
      - media_player.snapcast_group_1d659f9f91c541ba15a4ccb683372d18
      - media_player.snapcast_group_33513078aeaf749d7256aa508c5f3ff7
      - media_player.snapcast_group_53bc45571394eb9060b4cdb29715031d
      - media_player.snapcast_group_80b2566473c8b4128395d562d6760bc2
      - media_player.snapcast_group_81d8ee7df6b354c01ac2b15c412caf31
      - media_player.snapcast_group_9c9ed909371b4cfb3ba5177cbb34f9ea
      - media_player.snapcast_group_be21845f683db25f0db2b35508dccfa3
      - media_player.snapcast_group_d0a7f379181b4d8b72c7c1b6d9c1beb3
      - input_select.snapcast_server

media_player:
  - platform: snapcast
    host: !secret snapcast_server_ip
  - platform: mpd
    name: mpd
    host: !secret mopidy_server_ip
    port: !secret mopidy_server_port
  - platform: denon
    host: !secret denon_avr_ip_address
    name: DENON

   # run the following command to link gsp/gi path to HA for Gstreamer to function properly    
   # sudo ln -s /usr/lib/python3/dist-packages/gi /srv/homeassistant/homeassistant_venv/lib/python3.4/site-packages
  - platform: gstreamer
    pipeline: "audioresample ! audioconvert ! audio/x-raw,rate=48000,channels=2,format=S16LE ! wavenc ! filesink location=/tmp/snapfifo"

binary_sensor:
  - platform: mqtt
    name: Sharp TV
    state_topic: '/home/sharptv'
    payload_on: 'on'
    payload_off: 'off'
    value_template: '{{ value }}'

  - platform: mqtt
    name: Sharp TV Command State
    state_topic: '/home/sharp_tv_cmd'
    payload_on: 'on'
    payload_off: 'off'
    value_template: '{{ value }}'

input_select:
  snapcast_server:
    name: Snapcast Server
    options:
      - Select One
      - Stop
      - Start
      - Restart
    initial: Select One
    icon: mdi:music

shell_command:
  stop_snapserver: >-
    sudo systemctl stop snapserver
  start_snapserver: >-
    sudo systemctl start snapserver
  restart_snapserver: >-
    sudo systemctl restart snapserver

automation:

###############################################################################
# Snapcast Server Management
###############################################################################
  - alias: Snapcast Action
    hide_entity: true
    initial_state: true  
    trigger:
      platform: state
      entity_id: input_select.snapcast_server
    condition:
      - condition: template
        value_template: '{{ states.input_select.snapcast_server.state | lower != "select one" }}'      
    action:
      - service_template: >-
          {% if states.input_select.snapcast_server.state | lower == "stop" %}
            shell_command.stop_snapserver
          {% elif states.input_select.snapcast_server.state | lower == "start" %}
            shell_command.start_snapserver
          {% else %}
            shell_command.restart_snapserver
          {% endif %}

###############################################################################
# Persist current TV state
###############################################################################
  - alias: TV State
    initial_state: true
    hide_entity: true  
    trigger:
      - platform: state
        entity_id: input_boolean.sharp_tv
    action:
      - service: mqtt.publish
        data_template:
          topic: '/home/sharp_tv_cmd'
          payload: '{{ states.input_boolean.sharp_tv.state }}'
          retain: true

###############################################################################
# get the current TV state
###############################################################################
  - alias: Restore TV State
    initial_state: true
    hide_entity: true  
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service_template: >
          {% if states.binary_sensor.sharp_tv_command_state.state == "on" %}
            input_boolean.turn_on
          {% else %}
            input_boolean.turn_off
          {% endif %}
        entity_id: input_boolean.sharp_tv
